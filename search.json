[{"path":"/articles/CRTspat.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"CRTspat package","text":"CRTspat package intended support design analysis cluster-randomized trials (CRTs) geographical contamination arms. can also used simulation CRTs support development improved methodology. important set applications field trials vector-control interventions malaria. package can facilitate design efficient trials providing algorithms : algorithmic assignment clusters (buffer zones), analysis implications different choices. analysis effects contamination arms simulation trials based geography previously studied field sites trials, observed spatial patterns outcomes, geographical information novel sites. package builds work Multerer et al. (2021a), Multerer et al. (2021b) Anaya-Izquierdo & Alexander(2020). package intended function outcomes proportions, count data, continuous variables. current version (0.1.0.9000) testing developed mainly data proportions. revised ensure gives correct outputs kinds outcome.","code":""},{"path":"/articles/CRTspat.html","id":"anticipated-use-cases","dir":"Articles","previous_headings":"","what":"Anticipated use cases","title":"CRTspat package","text":"Examples provided workflow different use cases, follows: 1. Algorithmic definition clusters 2. Simulation trials geographical contamination 3. Estimation intracluster correlations (ICC) cluster size 4. Estimation optimal cluster size trial pre-determined buffer width 5. Analysis trials (including methods analysing contamination) 6. Thematic mapping geography CRT 7. Power sample size calculations allowing contamination 8, Eggs-fry scramble? Implications excluding buffer zones measurement outcomes 9: Preparation datasets CRTspat 10: Anonymising input locations (required sharing reference datasets)","code":""},{"path":"/articles/CRTspat.html","id":"package-functions","dir":"Articles","previous_headings":"","what":"Package functions","title":"CRTspat package","text":"package functions listed manual.","code":""},{"path":"/articles/CRTspat.html","id":"downloading-and-installing","dir":"Articles","previous_headings":"","what":"Downloading and installing","title":"CRTspat package","text":"CRTspat github can installed using: install.packages(\"devtools\") library(devtools) install_github(\"thomasasmith/CRTspat\") may need install packages CRTspat depends. particular, functionality depends R-INLA jagsUI may want install, however may possible get much CRTspat run without packages.","code":""},{"path":"/articles/Usecase2.html","id":"example-with-baseline-data-provided-as-proportions","dir":"Articles","previous_headings":"","what":"Example with baseline data provided as proportions","title":"Use Case 02: Simulation of trials with geographical contamination","text":"Fig 2.1 Map simulated outcome cluster level Fig 2.2 Variation outcome distance boundary","code":"library(CRTspat) set.seed(1234) example_locations <- readdata('example_site.csv') example_locations$base_denom <- 1 library(dplyr) example_randomized <- CRTsp(example_locations) %>%   aggregateCRT(auxiliaries = c(\"RDT_test_result\", \"base_denom\")) %>%   specify_clusters(h = 50, algorithm = 'NN') %>%   randomizeCRT(matchedPair = FALSE) summary(example_randomized) ## ===============================CLUSTER RANDOMISED TRIAL =========================== ##  ## Summary of coordinates ## ---------------------- ##         Min.   : 1st Qu.: Median : Mean   : 3rd Qu.: Max.   : ##       x -3.20    -1.40    -0.30    -0.07     1.26     5.16    ##       y -5.08    -2.84     0.19     0.05     2.49     6.16    ## Total area (within  0.2 km of a location) :  27.6 sq.km ##  ## Locations and Clusters ## ----------------------                                          -             ## Coordinate system                      (x, y)             ## Locations:                                                      1181             ## Available clusters (across both arms)                           24             ##   Per cluster mean number of points                             49.2             ##   Per cluster s.d. number of points                             3.9             ## S.D. of distance to nearest discordant location (km):           1.05           ## Cluster randomization:                      Independently randomized             ## No power calculations to report          -             ##  ## Other variables in dataset ## --------------------------          RDT_test_result  base_denom plotCRT(example_randomized, map = TRUE)   example2a <- simulateCRT(example_randomized,            effect = 0.8,            outcome0 = 0.5,            generateBaseline = FALSE,            baselineNumerator = \"RDT_test_result\",            baselineDenominator = \"base_denom\",            ICC_inp = 0.05, theta_inp = 0.8) ##  ## =====================    SIMULATION OF CLUSTER RANDOMISED TRIAL    ================= ## Estimating the smoothing required to achieve the target ICC of 0.05  ## summary(example2a) ## ===============================CLUSTER RANDOMISED TRIAL =========================== ##  ## Summary of coordinates ## ---------------------- ##         Min.   : 1st Qu.: Median : Mean   : 3rd Qu.: Max.   : ##       x -3.20    -1.40    -0.30    -0.07     1.26     5.16    ##       y -5.08    -2.84     0.19     0.05     2.49     6.16    ## Total area (within  0.2 km of a location) :  27.6 sq.km ##  ## Locations and Clusters ## ----------------------                                          -             ## Coordinate system                      (x, y)             ## Locations:                                                      1181             ## Available clusters (across both arms)                           24             ##   Per cluster mean number of points                             49.2             ##   Per cluster s.d. number of points                             3.9             ## S.D. of distance to nearest discordant location (km):           1.05           ## Cluster randomization:                      Independently randomized             ## No power calculations to report          -             ##  ## Other variables in dataset ## --------------------------          RDT_test_result  base_denom  denom  kernelID  propensity  num library(Matrix) examplemesh100 <- readdata(\"examplemesh100.txt\") example2aanalysis <- CRTanalysis(trial=example2a, method = 'T') summary(example2aanalysis) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  T  ## Link function:  logit  ## Model formula:  arm + (1 | cluster)  ## No modelling of contamination  ## Estimates:      Control:  0.481  (95% CL:  0.381 0.582 ) ##            Intervention:  0.117  (95% CL:  0.0827 0.162 ) ##                Efficacy:  0.757  (95% CL:  0.758 0.916 ) ##   ## P-value (2-sided):  1.187747e-07 example2aINLA <- CRTanalysis(trial=example2a,                  method = 'INLA', link='logit', cfunc = 'X',                  clusterEffects = TRUE,                  requireMesh = TRUE, inla_mesh = examplemesh100) plotCRT(example2aINLA) plotCRT(example2aINLA, map = TRUE, fill = 'prediction', showClusterBoundaries = TRUE)"},{"path":"/articles/Usecase2.html","id":"example-with-infectiousness-proxy-surface-generated-externally","dir":"Articles","previous_headings":"","what":"Example with infectiousness proxy surface generated externally","title":"Use Case 02: Simulation of trials with geographical contamination","text":"Fig 2.3 Map clusters simulated trial","code":"set.seed(1234) # Simulate a site with 2000 locations new_site <- CRTsp(geoscale = 2, locations=2000, kappa=3, mu=40) # propensity surface generated as an arbitrary linear function of x the co-ordinate new_site$propensity <- 0.5*new_site$trial$x - min(new_site$trial$x)+1 library(dplyr) example2b<- CRTsp(new_site) %>%    specify_clusters(h = 40, algorithm = 'NN') %>%    randomizeCRT(matchedPair = FALSE) %>%    simulateCRT(example_simulated,                           effect = 0.8,                           outcome0 = 0.5,                           generateBaseline = TRUE,                           ICC_inp = 0.05,                           theta_inp = 0.5) ##  ## =====================    SIMULATION OF CLUSTER RANDOMISED TRIAL    ================= ## Estimating the smoothing required to achieve the target ICC of 0.05  ## summary(example2b) ## ===============================CLUSTER RANDOMISED TRIAL =========================== ##  ## Summary of coordinates ## ---------------------- ##         Min.   : 1st Qu.: Median : Mean   : 3rd Qu.: Max.   : ##       x -8.73    -5.16    -1.03     0.00     5.17    11.26    ##       y -9.55    -4.42    -0.58     0.00     4.56    10.45    ## Total area (within  0.2 km of a location) :  181 sq.km ##  ## Locations and Clusters ## ----------------------                                          -             ## Coordinate system                      (x, y)             ## Locations:                                                      2000             ## Available clusters (across both arms)                           50             ##   Per cluster mean number of points                             40             ##   Per cluster s.d. number of points                             0             ## S.D. of distance to nearest discordant location (km):           1.33           ## Cluster randomization:                      Independently randomized             ## No power calculations to report          -             ##  ## Other variables in dataset ## --------------------------          denom  propensity  num  base_denom  base_num results2b <- CRTanalysis(example2b, method = 'GEE') summary(results2b) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  GEE  ## Link function:  logit  ## Model formula:  arm  ## No modelling of contamination  ## Estimates:      Control:  0.475  (95% CL:  0.407 0.544 ) ##            Intervention:  0.125  (95% CL:  0.103 0.151 ) ##                Efficacy:  0.737  (95% CL:  0.663 0.793 ) ## Intracluster correlation (ICC) :  0.0562  (95% CL:  0.0261 0.0862 ) ## plotCRT(example2b, map = TRUE, fill = 'clusters', showClusterLabels = TRUE, maskbuffer = 0.5)"},{"path":"/articles/Usecase2.html","id":"example-with-baseline-generated-from-user-provided-values-of-the-overall-initial-prevalence-and-icc","dir":"Articles","previous_headings":"","what":"Example with baseline generated from user-provided values of the overall initial prevalence and ICC","title":"Use Case 02: Simulation of trials with geographical contamination","text":"","code":"set.seed(1234) # use co-ordinates, cluster and arm assignments, and baseline data from `example_simulated` example2c<- CRTsp(geoscale = 2, locations=2000, kappa=3, mu=40) %>%    specify_clusters(h = 40, algorithm = 'NN') %>%    randomizeCRT(matchedPair = FALSE) %>%    simulateCRT(new_site,        effect = 0.8,        outcome0 = 0.5,        generateBaseline = TRUE,        baselineNumerator = 'base_num',        baselineDenominator = 'base_denom',        ICC_inp = 0.08,        theta_inp = 0.2) ##  ## =====================    SIMULATION OF CLUSTER RANDOMISED TRIAL    ================= ## Estimating the smoothing required to achieve the target ICC of 0.08  ## results2c <- CRTanalysis(example2c, method = 'GEE') summary(results2c) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  GEE  ## Link function:  logit  ## Model formula:  arm  ## No modelling of contamination  ## Estimates:      Control:  0.455  (95% CL:  0.375 0.537 ) ##            Intervention:  0.145  (95% CL:  0.122 0.171 ) ##                Efficacy:  0.681  (95% CL:  0.591 0.749 ) ## Intracluster correlation (ICC) :  0.0793  (95% CL:  0.0416 0.117 ) ##"},{"path":"/articles/Usecase4.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Use Case 04: Estimation of optimal cluster size for a trial with pre-determined buffer width","text":"example geography selected trial outcome, efficient trial design, conditional buffer width 0.5 km, achieved assigning 30 clusters arm site size analysed, though one third clusters eliminated inclusion buffer zones, . far adequate achieve adequate power. achieve 80% power 8,000 locations needed, larger trial area, 2,400 core (sampled) parts clusters. Fig 4.9 Size trial area required achieve adequate power","code":"ggplot2::ggplot(data = results, aes(x = k_core, y = totallocations_required)) +     geom_smooth() + xlab(\"Clusters in core (per arm)\") + ylab(\"Total locations required\") +     geom_segment(aes(x = 18, xend = 18, y = 0, yend = 8000), arrow = arrow(length = unit(1,         \"cm\")), lwd = 2, color = \"red\")"},{"path":"/articles/Usecase5.html","id":"statistical-methods","dir":"Articles","previous_headings":"","what":"Statistical Methods","title":"Use Case 05: Analysis of trials (including methods for analysing contamination)","text":"options can specified using method parameter function call : method = \"T\" summarises outcome level cluster, uses 2-sample t-tests carry statistical significance tests effect, compute confidence intervals effect size. t.test function stats package used. method = \"GEE\" uses Generalised Estimating Equations estimate efficacy model iid random effects clusters. estimate intracluster correlation (ICC) also provided. uses calls geepack package. method = \"LME4\" fits linear (continuous data) generalized linear (counts proportions) mixed models iid random effects clusters lme4. method = \"MCMC\" uses Markov chain Monte Carlo simulation package jagsUI, calls r-JAGS. method = \"INLA\" uses approximate Bayesian inference via R-INLA package. provides functionality geostatistical analysis, can used geographical mapping model outputs (illustrated . INLA spatial analysis requires prediction mesh. can generated using CRTspat::new_mesh(). can computationally expensive, recommended compute mesh just dataset. analysis methods can used carry simple comparision outcomes trial arms. offers different additional functionality, limitations (see Table 5.1). limitations specific options offered within CRTanalysis(), embrace full range options packages ‘wrapped’. specified using method argument function. Table 5.1. Available statistical methods analysis proportions, outcome control arm estimated : \\(\\hat{p}_{C} = \\frac{1}{1 + exp(-\\beta_1)}\\), intervention arm \\(\\hat{p}_{} = \\frac{1}{1 + exp(-\\beta_1-\\beta_2)}\\), efficacy estimated \\(\\tilde{E}_{s} = 1- \\frac{\\tilde{p}_{}}{\\tilde{p}_{C}}\\) \\(\\beta_1\\) intercept term \\(\\beta_2\\) incremental effect associated intervention. summary(\"<analysis>\"\") used view key results trial. display output statistical procedure called, try <analysis>$model_object summary(\"<analysis>$model_object\").","code":"library(CRTspat) example <- readdata(\"exampleCRT.txt\") analysisT <- CRTanalysis(example, method = \"T\") summary(analysisT) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  T  ## Link function:  logit  ## Model formula:  arm + (1 | cluster)  ## No modelling of contamination  ## Estimates:      Control:  0.364  (95% CL:  0.286 0.451 ) ##            Intervention:  0.21  (95% CL:  0.147 0.292 ) ##                Efficacy:  0.423  (95% CL:  0.208 0.727 ) ##   ## P-value (2-sided):  0.006879064 analysisT$model_object ##  ##  Two Sample t-test ##  ## data:  lp by arm ## t = 2.9818, df = 22, p-value = 0.006879 ## alternative hypothesis: true difference in means between group control and group intervention is not equal to 0 ## 95 percent confidence interval: ##  0.2332638 1.2989425 ## sample estimates: ##      mean in group control mean in group intervention  ##                 -0.5561662                 -1.3222694"},{"path":"/articles/Usecase5.html","id":"assessing-model-fit","dir":"Articles","previous_headings":"","what":"Assessing model fit","title":"Use Case 05: Analysis of trials (including methods for analysing contamination)","text":"model = \"LME4\" option outputs deviance model Akaike information criterion (AIC), can used select best fitting model. deviance information criterion (DIC) Bayesian information criterion (BIC) perform role Bayesian methods (\"INLA\", \"MCMC\"). comparison results cfunc = \"X\" cfunc = \"Z\" used assess whether intervention effect likely due chance. method = \"T\", cfunc = \"X\" provides significance test intervention effect directly. models contamination (see ) can compared cfunc = \"X\" evaluate whether contamination led important bias.","code":""},{"path":"/articles/Usecase5.html","id":"contamination-spillover","dir":"Articles","previous_headings":"","what":"Contamination (spillover)","title":"Use Case 05: Analysis of trials (including methods for analysing contamination)","text":"CRTanalysis() provides options analysing contamination arms, spillover effects either: assuming effects function Euclidean distance opposing arm trial. functional forms relationship specified value cfunc (Table 5.2). addition, models consider contamination can fitted using options Z X. included allow conventional analyses, also enable model selection using Akaike information criterion (AIC) Bayesian information criterion (BIC) likelihood ratio tests. Table 5.2. Available contamination functions cfunc options P, L S (also measure options disc) lead non-linear models contamination scale parameter beta must estimated. done selecting beta using one-dimensional optimisation goodness fit model stats::optimize(). different values cfunc lead fitted curves shown Figure 5.1. light blue shaded part plot corresponds contamination interval cases estimated. Fig 5.1 Fitted curves example dataset different options cfunc piecewise linear contamination function, cfunc = \"S\", linear scale linear predictor. used logistic model, , transformation via inverse link function leads slightly curved plot (Figure 5.1S). rescaled linear function, cfunc = \"R\", provided comparator use measure values measure = \"nearestDiscord\" see (used estimate contamination range). full set different cfunc options available model options \"LME4\", \"INLA\", \"MCMC\". performance different models yet thoroughly investigated. analyses Multerer et al. (2021b) found model equivalent method = \"MCMC\", cfunc = \"L\" gave estimates efficacy low bias, even simulations considerable contamination. Contamination can also analysed assuming effect size function number intervened locations surroundings location Anaya-Izquierdo & Alexander(2020). Several different functions available (Table 5.3). specified measure parameter. Table 5.3. Available surround functions compute_distance() function provided compute quantities, can described, compared, analysed independently CRTanalysis(). Users can also devise measures surround distance, add trial data frame specify using measure. Fig 5.2 Stacked bar plots different surrounds measure assigned value either hdep, sdep, disc, cfunc = \"R\" used overall effect size computed comparing fitted values model surround value zero maximum surround data. measure = \"disc\" radius estimated way beta (see Table 5.2). Fig 5.3 Fitted curves example dataset different surrounds","code":"analysisLME4_Z <- CRTanalysis(example, method = \"LME4\", cfunc = \"Z\") summary(analysisLME4_Z) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Model formula:  (1 | cluster)  ## No comparison of arms  ## Estimates:      Control:  0.285  (95% CL:  NA ) ## deviance:  1387.609  ## AIC     :  1391.609 analysisLME4_X <- CRTanalysis(example, method = \"LME4\", cfunc = \"X\") summary(analysisLME4_X) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Model formula:  arm + (1 | cluster)  ## No modelling of contamination  ## Estimates:      Control:  0.367  (95% CL:  0.291 0.449 ) ##            Intervention:  0.215  (95% CL:  0.162 0.283 ) ##                Efficacy:  0.414  (95% CL:  0.165 0.584 ) ## deviance:  1379.898  ## AIC     :  1385.898 analysisLME4_P <- CRTanalysis(example, method = \"LME4\", cfunc = \"P\") summary(analysisLME4_P) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  Nearest discordant location  ## Model formula:  pvar + (1 | cluster)  ## Error function model for contamination ## Estimates:      Control:  0.417  (95% CL:  0.332 0.508 ) ##            Intervention:  0.186  (95% CL:  0.138 0.251 ) ##                Efficacy:  0.553  (95% CL:  0.326 0.7 ) ## Contamination range(km):  1.73  (95% CL:  1.7 1.74 ) ## % locations contaminated: 68.2  (95% CL:  67.7 68.8  %) ## deviance:  1374.215  ## AIC     :  1382.215 including penalty for the contamination scale parameter analysisLME4_L <- CRTanalysis(example, method = \"LME4\", cfunc = \"L\") summary(analysisLME4_L) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  Nearest discordant location  ## Model formula:  pvar + (1 | cluster)  ## Sigmoid (logistic) function for contamination ## Estimates:      Control:  0.415  (95% CL:  0.328 0.505 ) ##            Intervention:  0.187  (95% CL:  0.135 0.251 ) ##                Efficacy:  0.55  (95% CL:  0.327 0.701 ) ## Contamination range(km):  1.78  (95% CL:  1.76 1.8 ) ## % locations contaminated: 70  (95% CL:  69.5 70.8  %) ## deviance:  1374.201  ## AIC     :  1382.201 including penalty for the contamination scale parameter analysisLME4_S <- CRTanalysis(example, method = \"LME4\", cfunc = \"S\") summary(analysisLME4_S) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  Nearest discordant location  ## Model formula:  pvar + (1 | cluster)  ## Piecewise linear function for contamination ## Estimates:      Control:  0.39  (95% CL:  0.313 0.472 ) ##            Intervention:  0.197  (95% CL:  0.146 0.261 ) ##                Efficacy:  0.493  (95% CL:  0.281 0.646 ) ## Contamination range(km):  1.65  (95% CL:  1.64 1.65 ) ## % locations contaminated: 64.6  (95% CL:  64.6 64.8  %) ## deviance:  1374.44  ## AIC     :  1382.44 including penalty for the contamination scale parameter analysisLME4_R <- CRTanalysis(example, method = \"LME4\", cfunc = \"R\") summary(analysisLME4_R) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  Nearest discordant location  ## Model formula:  pvar + (1 | cluster)  ## Rescaled linear function for contamination ## Estimates:      Control:  0.584  (95% CL:  0.387 0.763 ) ##            Intervention:  0.116  (95% CL:  0.0587 0.214 ) ##                Efficacy:  0.799  (95% CL:  0.473 0.921 ) ## Contamination range(km):  6.33  (95% CL:  6.14 6.43 ) ## % locations contaminated: 99.6  (95% CL:  98.7 99.7  %) ## deviance:  1378.711  ## AIC     :  1384.711 p0 <- plotCRT(analysisLME4_Z, map = FALSE) p1 <- plotCRT(analysisLME4_X, map = FALSE) p2 <- plotCRT(analysisLME4_P, map = FALSE) p3 <- plotCRT(analysisLME4_L, map = FALSE) p4 <- plotCRT(analysisLME4_S, map = FALSE) p5 <- plotCRT(analysisLME4_R, map = FALSE) library(cowplot) plot_grid(p0, p1, p2, p3, p4, p5, labels = c('Z', 'X', 'P', 'L', 'S', 'R'), label_size = 10, ncol = 2) examples <- compute_distance(trial = example$trial, measure = \"all\", radius = 0.15) ps1 <- plotCRT(examples, measure = \"hdep\", legend.position = c(0.8, 0.8)) ps2 <- plotCRT(examples, measure = \"sdep\") ps3 <- plotCRT(examples, measure = \"disc\") plot_grid(ps1, ps2, ps3, labels = c('hdep', 'sdep', 'disc'), label_size = 10, ncol = 2) examples_hdep <- CRTanalysis(examples, method = \"LME4\", measure = \"hdep\") ## *** using linear contamination function *** summary(examples_hdep) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  Tukey's half-depth  ## Model formula:  pvar + (1 | cluster)  ## Rescaled linear function for contamination ## Estimates:      Control:  0.317  (95% CL:  0.249 0.395 ) ##            Intervention:  0.179  (95% CL:  0.0873 0.327 ) ##                Efficacy:  0.437  (95% CL:  -0.145 0.748 ) ## deviance:  1385.079  ## AIC     :  1391.079 ps4 <- plotCRT(examples_hdep,legend.position = c(0.8, 0.8)) examples_sdep <- CRTanalysis(examples, method = \"LME4\", measure = \"sdep\") ## *** using linear contamination function *** summary(examples_sdep) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  Simplicial depth ## Model formula:  pvar + (1 | cluster)  ## Rescaled linear function for contamination ## Estimates:      Control:  0.319  (95% CL:  0.251 0.394 ) ##            Intervention:  0.193  (95% CL:  0.111 0.312 ) ##                Efficacy:  0.397  (95% CL:  -0.0602 0.676 ) ## deviance:  1384.584  ## AIC     :  1390.584 ps5 <- plotCRT(examples_sdep) examples_disc <- CRTanalysis(examples, method = \"LME4\", measure = \"disc\") ## *** using linear contamination function *** summary(examples_disc) ## =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= ## Analysis method:  LME4  ## Link function:  logit  ## Measure of distance or surround:  disc of radius 0.262 km  ## Model formula:  pvar + (1 | cluster)  ## Rescaled linear function for contamination ## Estimates:      Control:  0.355  (95% CL:  0.292 0.423 ) ##            Intervention:  0.0986  (95% CL:  0.0494 0.188 ) ##                Efficacy:  0.721  (95% CL:  0.418 0.87 ) ## deviance:  1375.41  ## AIC     :  1383.41 including penalty for the contamination scale parameter ps6 <- plotCRT(examples_disc) plot_grid(ps4, ps5, ps6, labels = c('hdep', 'sdep', 'disc'), label_size = 10, ncol = 2)"},{"path":"/articles/Usecase5.html","id":"geostatistical-models-and-mapping-results","dir":"Articles","previous_headings":"","what":"Geostatistical models and mapping results","title":"Use Case 05: Analysis of trials (including methods for analysing contamination)","text":"carry geostatistical analysis method = \"INLA\" prediction mesh needed. default low resolution mesh created (creating high resolution mesh computationally expensive). create 100m INLA mesh <MyTrial>, use: mesh <- new_mesh(trial = <MyTrial> , pixel = 0.1)","code":""},{"path":"/articles/Usecase7.html","id":"analysis-by-simulated-true-efficacy","dir":"Articles","previous_headings":"","what":"Analysis by simulated true efficacy","title":"Use Case 07: Power and sample size calculations allowing for contamination","text":"results grouped ranges efficacy, ratio number simulations giving statistically significant results expected number can calculated. Despite contamination, t-test performs similarly expectations across range efficacies investigated (Figure 7.1) Fig 7.1 Performance t-test efficacy \\(\\color{purple}{\\textbf{----}}\\) : ratio power:nominal power; \\(\\color{green}{\\textbf{----}}\\) :type II error rate; \\(\\color{blue}{\\textbf{----}}\\) : bias.","code":"results$effect_cat <- factor(round(results$effect*10)) by_effect <- results[results$effect > 0, ] %>%   group_by(effect_cat) %>%   summarise_at(c(\"effect\",\"significant_t\", \"nominalpower\", \"bias_t\", \"typeIIerror\"),                mean, na.rm = TRUE) by_effect$power_ratio <- with(by_effect, significant_t/nominalpower)  library(ggplot2) theme_set(theme_bw(base_size = 14)) ggplot(data = by_effect, aes(x = effect)) +   geom_smooth(aes(y = power_ratio), color = \"#b2df8a\",se = FALSE) +   geom_smooth(aes(y = typeIIerror), color = \"#D55E00\",se = FALSE) +   geom_smooth(aes(y = bias_t), color = \"#0072A7\",se = FALSE) +   xlab('Simulated efficacy (%)') +   ylab('Performance of t-test')"},{"path":"/articles/Usecase7.html","id":"analysis-by-simulated-contamination-range","dir":"Articles","previous_headings":"","what":"Analysis by simulated contamination range","title":"Use Case 07: Power and sample size calculations allowing for contamination","text":"analogous analysis, performance relative efficacy, can carried explore effect simulated contamination range. relationships simulated contamination range corresponding proportion locations trial (Figure 7.2). Fig 7.2 Proportion locations simulated contamination range \\(\\color{green}{\\textbf{----}}\\) :zone defined gamma_inp; \\(\\color{blue}{\\textbf{----}}\\) : zone defined sd. contamination results loss power, increased negative bias efficacy estimate, effects rather small (Figure 7.3). potential using CRTanalysis() function model contamination hence correct naive efficacy estimate (t-test) can also explored (see Use Case 5 Multerer et al. (2021b). Fig 7.3 Performance t-test contamination range \\(\\color{purple}{\\textbf{----}}\\) : ratio power:nominal power; \\(\\color{green}{\\textbf{----}}\\) :type II error rate; \\(\\color{blue}{\\textbf{----}}\\) : bias.","code":"ggplot(data = results, aes(x = theta_inp)) +   geom_smooth(aes(y = contaminate_pop_pr_input), color = \"#b2df8a\",se = FALSE, size = 2) +   geom_smooth(aes(y = contaminate_pop_pr_sd), color = \"#0072A7\",se = FALSE, size = 2) +   xlab('Simulated contamination range (km)') +   ylab('Proportion of the locations')  results$theta_cat <- factor(round(results$theta_inp*10)) by_theta <- results[results$effect > 0, ] %>%   group_by(theta_cat) %>%   summarise_at(c(\"theta_inp\",\"significant_t\", \"nominalpower\", \"bias_t\", \"typeIIerror\"),                mean, na.rm = TRUE) by_theta$power_ratio <- with(by_theta, significant_t/nominalpower) ggplot(data = by_theta, aes(x = theta_inp)) +   geom_smooth(aes(y = power_ratio), color = \"#b2df8a\",se = FALSE) +   geom_smooth(aes(y = typeIIerror), color = \"#D55E00\",se = FALSE) +   geom_smooth(aes(y = bias_t), color = \"#0072A7\",se = FALSE) +   xlab('Simulated contamination range (km)') +   ylab('Performance of t-test')"},{"path":"/articles/Usecase8.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Use Case 08: Eggs - to fry or scramble?","text":"Figure 8.1. based analysing 1000 simulated datasets (12,000 scenarios ). power calculated proportion significance tests likelihood ratio p < 0.05. fried-egg design suffers little loss power exclusion observations sample size less 750 (suggestion maximum sample size 900 locations presumably effect smoothing results). ‘scrambled’ egg trials lose power reduction number observations (Figure 8.1a). Substantive loss power occurs contamination range 1 km dataset. fried egg designs largely avoid loss power (Figure 8.1b) less powerful average contamination range less 0.5 km. simulations, lme4 estimates efficacy biased slightly downwards (.e. negative sign). absolute bias least locations excluded (Figure 8.1c). less absolute bias fried-egg designs effect small except simulated contamination range large (Figure 8.1d). difference bias ‘fried’ ‘scrambled’ egg designs modest relation scale overall bias. Fig 8.1 Power bias number locations analysis \\(\\color{purple}{\\textbf{----}}\\) : Randomly sampled locations removed; \\(\\color{green}{\\textbf{----}}\\) : Fried-egg- locations boundary zone removed.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Smith. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith T (2023). CRTspat: Design analysis Cluster Randomized Trials health interventions spatial contamination. R package version 0.1.0.9000.","code":"@Manual{,   title = {CRTspat: Design and analysis of Cluster Randomized Trials of health interventions with spatial contamination},   author = {Thomas Smith},   year = {2023},   note = {R package version 0.1.0.9000}, }"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Thomas Smith Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/aggregateCRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data across records with duplicated locations — aggregateCRT","title":"Aggregate data across records with duplicated locations — aggregateCRT","text":"aggregateCRT aggregates data \"CRTsp\" object trial data frame containing multiple records location, outputs list class \"CRTsp\" containing single values location, coordinates auxiliary variables.","code":""},{"path":"/reference/aggregateCRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data across records with duplicated locations — aggregateCRT","text":"","code":"aggregateCRT(trial, auxiliaries = NULL)"},{"path":"/reference/aggregateCRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate data across records with duplicated locations — aggregateCRT","text":"trial object class \"CRTsp\" containing locations (x,y) variables summed auxiliaries vector names auxiliary variables summed across location","code":""},{"path":"/reference/aggregateCRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data across records with duplicated locations — aggregateCRT","text":"list class \"CRTsp\"","code":""},{"path":"/reference/aggregateCRT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate data across records with duplicated locations — aggregateCRT","text":"Variables trial dataframe included auxiliaries retained output algorithm \"CRTsp\" object, value corresponding first record location input data frame","code":""},{"path":"/reference/aggregateCRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate data across records with duplicated locations — aggregateCRT","text":"","code":"{ trial <- readdata('example_site.csv') trial$base_denom <- 1 aggregated <- aggregateCRT(trial, auxiliaries = c(\"RDT_test_result\",\"base_denom\")) }"},{"path":"/reference/anonymize_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Anonymize locations of a trial site — anonymize_site","title":"Anonymize locations of a trial site — anonymize_site","text":"anonymize_site Transforms coordinates maintain confidentiality","code":""},{"path":"/reference/anonymize_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anonymize locations of a trial site — anonymize_site","text":"","code":"anonymize_site(trial, ID = NULL, latvar = \"lat\", longvar = \"long\")"},{"path":"/reference/anonymize_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anonymize locations of a trial site — anonymize_site","text":"trial \"CRTsp\" object trial data frame co-ordinates households ID name column used identifier points latvar name column containing latitudes decimal degrees longvar name column containing longitudes decimal degrees","code":""},{"path":"/reference/anonymize_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anonymize locations of a trial site — anonymize_site","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/anonymize_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anonymize locations of a trial site — anonymize_site","text":"coordinates transformed order obscure geographical information, support confidentiality information linked households. input may either lat long x,y coordinates. function first searches lat long co-ordinates converts x,y Cartesian coordinates. rotated random angle random origin. returned object transformed co-ordinates re-centred origin. centroid information stored \"CRTsp\" object removed. data unchanged.","code":""},{"path":"/reference/anonymize_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anonymize locations of a trial site — anonymize_site","text":"","code":"#Rotate and reflect test site locations transformedTestlocations <- anonymize_site(trial =  readdata(\"exampleCRT.txt\"))"},{"path":"/reference/coef.CRTanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients — coef.CRTanalysis","title":"Extract model coefficients — coef.CRTanalysis","text":"coef.CRTanalysis method extracting model fitted values","code":""},{"path":"/reference/coef.CRTanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients — coef.CRTanalysis","text":"","code":"# S3 method for CRTanalysis coef(object, ...)"},{"path":"/reference/coef.CRTanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients — coef.CRTanalysis","text":"object CRTanalysis object ... arguments","code":""},{"path":"/reference/compute_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance or surround values for a cluster randomized trial — compute_distance","title":"Compute distance or surround values for a cluster randomized trial — compute_distance","text":"compute_distance computes distance surround values cluster randomized trial (CRT)","code":""},{"path":"/reference/compute_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance or surround values for a cluster randomized trial — compute_distance","text":"","code":"compute_distance(trial, measure = \"all\", radius = 1)"},{"path":"/reference/compute_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance or surround values for a cluster randomized trial — compute_distance","text":"trial object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm). measure quantity(s) computed. Options : radius radius used calculating disc km (default 1.0)","code":""},{"path":"/reference/compute_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute distance or surround values for a cluster randomized trial — compute_distance","text":"input \"CRTsp\" object additional column(s) added trial data frame name(s) corresponding input value measure.","code":""},{"path":"/reference/compute_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute distance or surround values for a cluster randomized trial — compute_distance","text":"selected measure, function first checks whether variable already present, carries calculations corresponding field absent trial data frame. measure = \"nearestDiscord\" selected computed values Euclidean distances assigned positive sign intervention arm trial, negative sign control arm. measure = \"disc\" specified, disc statistic computed location number locations within specified radius intervention arm (Anaya-Izquierdo & Alexander(2020)). input value radius stored design list output \"CRTsp\" object. Recalculation carried input value radius differs one input design list. either measure = \"hdep\" measure = \"sdep\" specified simplicial depth Tukey's half space depth calculated using algorithm Rousseeuw & Ruts(1996). location intervention arm, depth computed respect locations intervention arm. location control arm depth computed relative intervention locations (Anaya-Izquierdo & Alexander(2020)).","code":""},{"path":"/reference/compute_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distance or surround values for a cluster randomized trial — compute_distance","text":"","code":"#Calculate the disc with a radius of 1 km exampletrial <- compute_distance(trial = readdata('exampleCRT.txt'), measure = 'disc', radius = 1.0)"},{"path":"/reference/CRTanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of cluster randomized trial with contamination — CRTanalysis","title":"Analysis of cluster randomized trial with contamination — CRTanalysis","text":"CRTanalysis carries statistical analysis cluster randomized trial (CRT).","code":""},{"path":"/reference/CRTanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of cluster randomized trial with contamination — CRTanalysis","text":"","code":"CRTanalysis(   trial,   method = \"GEE\",   measure = \"nearestDiscord\",   beta = NULL,   cfunc = \"L\",   link = \"logit\",   numerator = \"num\",   denominator = \"denom\",   excludeBuffer = FALSE,   alpha = 0.05,   baselineOnly = FALSE,   baselineNumerator = \"base_num\",   baselineDenominator = \"base_denom\",   personalProtection = FALSE,   clusterEffects = TRUE,   spatialEffects = FALSE,   resamples = 10000,   requireMesh = FALSE,   inla_mesh = NULL )"},{"path":"/reference/CRTanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of cluster randomized trial with contamination — CRTanalysis","text":"trial object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm) outcome data (see details). method statistical method options: measure measure distance surround options: beta numeric: pre-specified value contamination parameter disc radius cfunc transformation defining contamination function.  options : link link function. options : numerator string: name numerator variable outcome denominator string: name denominator variable outcome data (present) excludeBuffer logical: indicator whether buffer zone (records buffer=TRUE) excluded analysis alpha numeric: confidence level confidence intervals credible intervals baselineOnly logical: indicator whether required analysis effect size baseline baselineNumerator string: name numerator variable baseline data (present) baselineDenominator string: name denominator variable baseline data (present) personalProtection logical: indicator whether model includes local effects contamination clusterEffects logical: indicator whether model includes cluster random effects spatialEffects logical: indicator whether model includes spatial random effects resamples integer: number samples sample-based intervals requireMesh logical: indicator whether spatial predictions required inla_mesh string: name pre-existing INLA input object created new_mesh()","code":""},{"path":"/reference/CRTanalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of cluster randomized trial with contamination — CRTanalysis","text":"list class CRTanalysis containing following results analysis: description : description dataset method : statistical method pt_ests : point estimates int_ests : interval estimates model_object : object returned fitting routine contamination : function values statistics describing estimated contamination","code":""},{"path":"/reference/CRTanalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of cluster randomized trial with contamination — CRTanalysis","text":"CRTanalysis wrapper statistical analysis packages: geepack, INLA, jagsUI, t.test function package stats. wrapper provide interface full functionality packages. specific typical analyses cluster randomized trials geographical clustering. Details provided vignette key results analyses can extracted using summary() output list. model_object output list usual output statistical analysis routine, can also inspected summary(), analysed using stats::fitted() purposes evaluation model fit etc.. beta specifies contamination parameter. measure = \"disc\" disc radius km.","code":""},{"path":"/reference/CRTanalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of cluster randomized trial with contamination — CRTanalysis","text":"","code":"{example <- readdata('exampleCRT.txt') # Analysis of test dataset by t-test exampleT <- CRTanalysis(example, method = \"T\") summary(exampleT) # Standard GEE analysis of test dataset ignoring contamination exampleGEE <- CRTanalysis(example, method = \"GEE\") summary(exampleGEE) # LME4 analysis with error function contamination function exampleLME4 <- CRTanalysis(example, method = \"LME4\", cfunc = \"P\") summary(exampleLME4) } #> =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= #> Analysis method:  T  #> Link function:  logit  #> Model formula:  arm + (1 | cluster)  #> No modelling of contamination  #> Estimates:      Control:  0.364  (95% CL:  0.286 0.451 ) #>            Intervention:  0.21  (95% CL:  0.147 0.292 ) #>                Efficacy:  0.423  (95% CL:  0.208 0.727 ) #>   #> P-value (2-sided):  0.006879064  #> =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= #> Analysis method:  GEE  #> Link function:  logit  #> Model formula:  arm  #> No modelling of contamination  #> Estimates:      Control:  0.373  (95% CL:  0.306 0.445 ) #>            Intervention:  0.228  (95% CL:  0.167 0.305 ) #>                Efficacy:  0.388  (95% CL:  0.131 0.575 ) #> Intracluster correlation (ICC) :  0.0573  (95% CL:  0.00643 0.108 ) #>   #> =====================CLUSTER RANDOMISED TRIAL ANALYSIS ================= #> Analysis method:  LME4  #> Link function:  logit  #> Measure of distance or surround:  Nearest discordant location  #> Model formula:  pvar + (1 | cluster)  #> Error function model for contamination #> Estimates:      Control:  0.417  (95% CL:  0.331 0.509 ) #>            Intervention:  0.187  (95% CL:  0.136 0.25 ) #>                Efficacy:  0.552  (95% CL:  0.325 0.702 ) #> Contamination range(km):  1.73  (95% CL:  1.7 1.74 ) #> % locations contaminated: 68.2  (95% CL:  67.7 68.8  %) #> deviance:  1374.215  #> AIC     :  1382.215 including penalty for the contamination scale parameter"},{"path":"/reference/CRTpower.html","id":null,"dir":"Reference","previous_headings":"","what":"Power and sample size calculations for a CRT — CRTpower","title":"Power and sample size calculations for a CRT — CRTpower","text":"CRTpower carries power sample size calculations CRTs.","code":""},{"path":"/reference/CRTpower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power and sample size calculations for a CRT — CRTpower","text":"","code":"CRTpower(   trial = NULL,   locations = NULL,   alpha = 0.05,   desiredPower = 0.8,   effect = NULL,   yC = NULL,   outcome_type = \"d\",   sigma2 = NULL,   phi = 1,   N = 1,   ICC = NULL,   k = NULL,   sd_h = 0 )"},{"path":"/reference/CRTpower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power and sample size calculations for a CRT — CRTpower","text":"trial dataframe 'CRTsp' object containing Cartesian coordinates locations columns 'x' 'y'. locations numeric: total number units available randomization (required trial specified) alpha numeric: confidence level desiredPower numeric: desired power effect numeric: required effect size yC numeric: baseline value outcome outcome_type character options - 'y': continuous; 'n': count; 'e': event rate; 'p': proportion; 'd': dichotomous. sigma2 numeric: variance outcome (required outcome_type = 'y') phi numeric: overdispersion parameter (outcome_type = 'n' outcome_type = 'e') N numeric: mean denominator proportions (outcome_type = 'p') ICC numeric: Intra-Cluster Correlation k integer: number clusters arm (required trial specified) sd_h standard deviation number units per cluster (required trial specified)","code":""},{"path":"/reference/CRTpower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power and sample size calculations for a CRT — CRTpower","text":"list class 'CRTsp' object comprising input data, cluster arm assignments, trial description results power calculations","code":""},{"path":"/reference/CRTpower.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power and sample size calculations for a CRT — CRTpower","text":"Power sample size calculations two-arm trial using formulae Hemming et al, 2011 use normal approximation inter-cluster variation. counts event rate data quasi–Poisson model assumed. functions consider loss power due contamination, loss follow-etc. geolocations input power sample size calculations based scalar input parameters. trial dataframe 'CRTsp' object containing pre-existing randomization input numbers sizes clusters input data used estimate power. buffer zones specified separate calculations made core area full site output object class 'CRTsp' containing input trial data.frame values : required numbers clusters achieve specified power. design effect based input ICC. Calculations nominal power (ignoring bias caused contamination effects)","code":""},{"path":"/reference/CRTpower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power and sample size calculations for a CRT — CRTpower","text":"","code":"{# Example without input geolocations examplePower1 = CRTpower(locations = 3000, ICC=0.10, effect=0.4, alpha = 0.05,     outcome_type = 'd', desiredPower = 0.8, yC=0.35, k = 20, sd_h=5) summary(examplePower1) # Example with input geolocations and randomisation examplePower2 = CRTpower(trial = readdata('example_site.csv'), desiredPower = 0.8,     effect=0.4, yC=0.35, outcome_type = 'd', ICC = 0.05, k = 20) summary(examplePower2) } #> *** All of geoscale, locations, kappa, mu needed to simulate a new site ***===============================CLUSTER RANDOMISED TRIAL =========================== #> Locations and Clusters #> ----------------------                                          - #> Coordinate system                      No coordinates in dataset #> Not aggregated. Total records: 0. Unique locations:          3000 #> Available clusters (across both arms)                           40 #>   Per cluster mean number of points                             75 #>   Per cluster s.d. number of points                             5 #> Cluster randomization:                      Independently randomized #>  #> Specification of Requirements #> -----------------------------          - #> Significance level (2-sided):              0.05 #> Type of Outcome                             dichotomous #> Expected outcome in control arm:            0.35 #> Required effect size:                       0.4 #> Intra-cluster correlation:                  0.1 #>  #> Power calculations (ignoring contamination) #> ------------------                              - #> Design effect:                                   8.4 #> Nominal power (%)                                84.5 #> Clusters required for power of 80%:               38 #> Sufficient clusters for required power?          Yes #> *** Assuming all clusters are the same size ***===============================CLUSTER RANDOMISED TRIAL =========================== #>  #> Summary of coordinates #> ---------------------- #>         Min.   : 1st Qu.: Median : Mean   : 3rd Qu.: Max.   : #>       x -3.20    -1.31    -0.24     0.00     1.35     5.16    #>       y -5.08    -2.84    -0.17     0.00     2.49     6.16    #> Total area (within  0.2 km of a location) :  27.6 sq.km #>  #> Locations and Clusters #> ----------------------                                          - #> Coordinate system                      (x, y) #> Not aggregated. Total records: 3172. Unique locations:          1181 #> Available clusters (across both arms)                           40 #>   Per cluster mean number of points                             29.5 #>   Per cluster s.d. number of points                             0 #> Cluster randomization:                      Independently randomized #>  #> Specification of Requirements #> -----------------------------          - #> Significance level (2-sided):              0.05 #> Type of Outcome                             dichotomous #> Expected outcome in control arm:            0.35 #> Required effect size:                       0.4 #> Intra-cluster correlation:                  0.05 #>  #> Power calculations (ignoring contamination) #> ------------------                              - #> Design effect:                                   2.4 #> Nominal power (%)                                93.6 #> Clusters required for power of 80%:               26 #> Sufficient clusters for required power?          Yes #>  #> Other variables in dataset #> --------------------------          RDT_test_result"},{"path":"/reference/CRTsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or update a ","title":"Create or update a ","text":"CRTsp coerces data frames containing co-ordinates location attributes objects class \"CRTsp\" creates new \"CRTsp\" object simulating set Cartesian co-ordinates use locations simulated trial site","code":""},{"path":"/reference/CRTsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or update a ","text":"","code":"CRTsp(   x = NULL,   design = NULL,   geoscale = NULL,   locations = NULL,   kappa = NULL,   mu = NULL )"},{"path":"/reference/CRTsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or update a ","text":"x object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm). Optionally specification buffer zone (logical buffer); variables required subsequent analysis. design list: optional list containing requirements power trial geoscale standard deviation random displacement settlement cluster center (new objects) locations number locations population (new objects) kappa intensity Poisson process settlement cluster centers (new objects) mu mean  number points per settlement cluster (new objects)","code":""},{"path":"/reference/CRTsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or update a ","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/CRTsp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create or update a ","text":"data frame \"CRTsp\" object input output \"CRTsp\" object validated, description geography computed power calculations carried . geoscale, locations, kappa mu specified new trial dataframe constructed corresponding novel simulated human settlement pattern. generated using Thomas algorithm (rThomas) spatstat allowing user defined density locations degree spatial clustering. resulting trial data frame comprises set Cartesian coordinates centred origin.","code":""},{"path":"/reference/CRTsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or update a ","text":"","code":"{# Generate a simulated area with 10,000 locations example_area = CRTsp(geoscale = 1, locations=10000, kappa=3, mu=40) summary(example_area) } #> ===============================CLUSTER RANDOMISED TRIAL =========================== #>  #> Summary of coordinates #> ---------------------- #>         Min.   : 1st Qu.: Median : Mean   : 3rd Qu.: Max.   : #>       x -4.97    -2.40    -0.04     0.00     2.41     5.03    #>       y -5.10    -2.45     0.22     0.00     2.37     4.90    #> Total area (within  0.2 km of a location) :  106 sq.km #>  #> Geolocation of centroid (radians): #>           latitude:  longitude:   #>  #> Locations and Clusters #> ----------------------                                          -             #> Coordinate system                      (x, y)             #> Locations:                                                      10000             #> Available clusters (across both arms)                           Not assigned             #> Cluster randomization:                      Independently randomized             #> No power calculations to report          -"},{"path":"/reference/CRTspat-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CRTspat: Design and analysis of Cluster Randomized Trials of health interventions with spatial contamination — CRTspat-package","title":"CRTspat: Design and analysis of Cluster Randomized Trials of health interventions with spatial contamination — CRTspat-package","text":"CRTspat comprises suite functions support design cluster randomised trials (health) interventions may geographical contamination arms. cluster size sample size cluster randomized controls interventions geographical contamination, carrying randomizations trials. methods described Multerer et al. (preparation). package takes inputs table geolocations experimental units. Example datasets provided taken field trials malaria interventions.","code":""},{"path":"/reference/CRTspat-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CRTspat: Design and analysis of Cluster Randomized Trials of health interventions with spatial contamination — CRTspat-package","text":"Maintainer: Thomas Smith thomas-.smith@unibas.ch (ORCID)","code":""},{"path":"/reference/CRTwrite.html","id":null,"dir":"Reference","previous_headings":"","what":"Export of GIS layer from 'CRTsp' — CRTwrite","title":"Export of GIS layer from 'CRTsp' — CRTwrite","text":"CRTwrite exports simple features object GIS format","code":""},{"path":"/reference/CRTwrite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export of GIS layer from 'CRTsp' — CRTwrite","text":"","code":"CRTwrite(   object,   dsn,   feature = \"clusters\",   buffer_width,   maskbuffer = 0.2,   ... )"},{"path":"/reference/CRTwrite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export of GIS layer from 'CRTsp' — CRTwrite","text":"object object class 'CRTsp' dsn dataset name output objects feature feature exported, options : buffer_width width buffer discordant locations (km) maskbuffer radius buffer drawn around inhabited areas (km) ... arguments passed 'sf::write_sf'","code":""},{"path":"/reference/CRTwrite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export of GIS layer from 'CRTsp' — CRTwrite","text":"obj, invisibly","code":""},{"path":"/reference/CRTwrite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export of GIS layer from 'CRTsp' — CRTwrite","text":"'sf::write_sf' used format output. function returns TRUE success, FALSE failure, invisibly.  input object contains 'centroid' used compute lat long coordinates, assigned \"WGS84\" coordinate reference system. Otherwise objects equirectangular co-ordinates centroid (0,0). feature = 'buffer' buffer width determination described plotCRT().  output vector objects constructed forming Voronoi tessellation polygons around locations combining polygons. polygons outside study area extend outwards external rectangle. 'mask' used mask areas polygons distance > maskbuffer nearest location.","code":""},{"path":"/reference/CRTwrite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export of GIS layer from 'CRTsp' — CRTwrite","text":"","code":"if (FALSE) CRTwrite(readdata('exampleCRT.txt'), dsn = 'arms', feature = 'arms',          driver = 'ESRI Shapefile', maskbuffer = 0.2)"},{"path":"/reference/fitted.CRTanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model fitted values — fitted.CRTanalysis","title":"Extract model fitted values — fitted.CRTanalysis","text":"fitted.CRTanalysis method extracting model fitted values","code":""},{"path":"/reference/fitted.CRTanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model fitted values — fitted.CRTanalysis","text":"","code":"# S3 method for CRTanalysis fitted(object, ...)"},{"path":"/reference/fitted.CRTanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model fitted values — fitted.CRTanalysis","text":"object CRTanalysis object ... arguments","code":""},{"path":"/reference/latlong_as_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lat long co-ordinates to x,y — latlong_as_xy","title":"Convert lat long co-ordinates to x,y — latlong_as_xy","text":"latlong_as_xy converts co-ordinates expressed decimal degrees x,y","code":""},{"path":"/reference/latlong_as_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lat long co-ordinates to x,y — latlong_as_xy","text":"","code":"latlong_as_xy(trial, latvar = \"lat\", longvar = \"long\")"},{"path":"/reference/latlong_as_xy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lat long co-ordinates to x,y — latlong_as_xy","text":"trial list class \"CRTsp\" containing latitudes longitudes decimal degrees latvar name column containing latitudes decimal degrees longvar name column containing longitudes decimal degrees","code":""},{"path":"/reference/latlong_as_xy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lat long co-ordinates to x,y — latlong_as_xy","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/latlong_as_xy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert lat long co-ordinates to x,y — latlong_as_xy","text":"output object contains input locations replaced Cartesian coordinates units km, centred (0,0), corresponding using equirectangular projection (valid small areas). data unchanged.","code":""},{"path":"/reference/latlong_as_xy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert lat long co-ordinates to x,y — latlong_as_xy","text":"","code":"examplexy <- latlong_as_xy(readdata(\"example_latlong.csv\"))"},{"path":"/reference/new_mesh.html","id":null,"dir":"Reference","previous_headings":"","what":"new_mesh create objects required for INLA analysis of an object of class ","title":"new_mesh create objects required for INLA analysis of an object of class ","text":"new_mesh create objects required INLA analysis object class \"CRTsp\".","code":""},{"path":"/reference/new_mesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"new_mesh create objects required for INLA analysis of an object of class ","text":"","code":"new_mesh(   trial = trial,   offset = -0.1,   max.edge = 0.25,   inla.alpha = 2,   maskbuffer = 0.5,   pixel = 0.5,   measure = \"nearestDiscord\",   radius = 1 )"},{"path":"/reference/new_mesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"new_mesh create objects required for INLA analysis of an object of class ","text":"trial object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm) outcome. offset (see inla.mesh.2d documentation) max.edge (see inla.mesh.2d documentation) inla.alpha parameter related smoothness (see inla documentation) maskbuffer numeric: width buffer around points (km) pixel numeric: size pixel (km) measure measure distance surround options: radius numeric: radius used computing disk (measure = \"disc\" (km))","code":""},{"path":"/reference/new_mesh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"new_mesh create objects required for INLA analysis of an object of class ","text":"list prediction Data frame containing prediction points covariate values projection matrix observations mesh nodes. Ap projection matrix prediction points mesh nodes. indexs index set SPDE model spde SPDE model pixel pixel size (km)","code":""},{"path":"/reference/new_mesh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"new_mesh create objects required for INLA analysis of an object of class ","text":"new_mesh carries computationally intensive steps required setting-INLA analysis object class \"CRTsp\", creating preface_validitytion mesh projection matrices. mesh can reused different models fitted geography. computational resources required depend largely resolution prediction mesh. prediction mesh thinned include pixels centred distance less maskbuffer nearest point. warning may generated unless Matrix library loaded.","code":""},{"path":"/reference/new_mesh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"new_mesh create objects required for INLA analysis of an object of class ","text":"","code":"{ # low resolution mesh for test dataset library(Matrix) example <- readdata('exampleCRT.txt') exampleMesh=new_mesh(example, pixel = 0.5) } #> as(<dgCMatrix>, \"dgTMatrix\") is deprecated since Matrix 1.5-0; do as(., \"TsparseMatrix\") instead #> Mesh created of  183  pixels of size  0.5  km  if (FALSE) { # 50m mesh for analyses of test dataset using \\code{measure = \"nearestDiscord\"}. library(Matrix) example <- readdata('exampleCRT.txt') exampleMesh=new_mesh(example, pixel = 0.05) }"},{"path":"/reference/plotCRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical displays of the geography of a CRT — plotCRT","title":"Graphical displays of the geography of a CRT — plotCRT","text":"plotCRT returns graphical displays geography CRT results statistical analyses CRT","code":""},{"path":"/reference/plotCRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical displays of the geography of a CRT — plotCRT","text":"","code":"plotCRT(   object,   map = FALSE,   measure = \"nearestDiscord\",   fill = \"arms\",   showLocations = FALSE,   showClusterBoundaries = TRUE,   showClusterLabels = FALSE,   showBuffer = FALSE,   cpalette = NULL,   buffer_width = NULL,   maskbuffer = 0.2,   labelsize = 4,   legend.position = NULL )"},{"path":"/reference/plotCRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical displays of the geography of a CRT — plotCRT","text":"object object class 'CRTanalysis' produced CRTanalysis() map logical: indicator whether map required measure measure distance surround options: fill fill layer map options: showLocations logical: determining whether locations shown showClusterBoundaries logical: determining whether cluster boundaries shown showClusterLabels logical: determining whether cluster numbers shown showBuffer logical: whether buffer zone overlayed cpalette colour palette (use different colours clusters must least long number clusters. buffer_width width buffer zone overlayed (km) maskbuffer radius buffer around inhabited areas (km) labelsize size cluster number labels legend.position (using ggplot2::themes syntax)","code":""},{"path":"/reference/plotCRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical displays of the geography of a CRT — plotCRT","text":"graphics object produced ggplot2 package","code":""},{"path":"/reference/plotCRT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Graphical displays of the geography of a CRT — plotCRT","text":"map = FALSE input trial data frame CRTsp object, containing randomisation arms, stacked bar chart outcome grouped specified measure produced. specified measure yet calculated error returned map = FALSE input CRTanalysis object plot estimated contamination function generated. fitted contamination function plotted continuous blue line measure distance nearest discordant location surround. Using axes, data summaries plotted ten categories distance boundary. average outcome confidence intervals plotted. analyses logit link function outcome plotted proportion. analyses log link function outcome plotted scale Williams' mean (mean exp(log(x + 1))) - 1) map = TRUE thematic map corresponding value fill generated. fill = 'clusters' leads thematic map showing locations clusters fill = 'arms' leads thematic map showing geography randomization fill = 'distance' leads raster plot distance nearest discordant location. fill = 'prediction' leads raster plot predictions 'INLA' model. showBuffer = TRUE map overlaid grey transparent layer showing areas within defined distance boundary arms. Possibilities : trial randomised showBuffer = FALSE buffer displayed buffer_width takes positive value buffers width displayed irrespective pre-specified contamination limits. input 'CRTanalysis' contamination limits estimated 'LME4' 'INLA' model limits used define displayed buffer. buffer_width specified contamination limits available, pre-specified buffer (e.g. one generated specify_buffer()) displayed. message output indicating possibilities applies.","code":""},{"path":"/reference/plotCRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical displays of the geography of a CRT — plotCRT","text":"","code":"{example <- readdata('exampleCRT.txt') #Plot of data by distance plotCRT(example) #Map of locations only plotCRT(example, map = TRUE, fill = 'none', showLocations = TRUE,            showClusterBoundaries=FALSE, maskbuffer=0.2) #show cluster boundaries and number clusters plotCRT(example, map = TRUE, fill ='none', showClusterBoundaries=TRUE,            showClusterLabels=TRUE, maskbuffer=0.2, labelsize = 2) #show clusters in colour plotCRT(example, map = TRUE, fill = 'clusters', showClusterLabels = TRUE,           labelsize=2, maskbuffer=0.2) #show arms plotCRT(example, map = TRUE,         fill = 'arms', maskbuffer=0.2, legend.position=c(0.8,0.8)) #contamination plot analysis <- CRTanalysis(example) plotCRT(analysis, map = FALSE) }"},{"path":"/reference/predict.CRTanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Model predictions — predict.CRTanalysis","title":"Model predictions — predict.CRTanalysis","text":"predict.CRTanalysis method extracting model predictions","code":""},{"path":"/reference/predict.CRTanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model predictions — predict.CRTanalysis","text":"","code":"# S3 method for CRTanalysis predict(object, ...)"},{"path":"/reference/predict.CRTanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model predictions — predict.CRTanalysis","text":"object CRTanalysis object ... arguments","code":""},{"path":"/reference/randomizeCRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomize a two-armed cluster randomized trial — randomizeCRT","title":"Randomize a two-armed cluster randomized trial — randomizeCRT","text":"randomizeCRT carries randomization clusters CRT augments trial dataframe assignments arms","code":""},{"path":"/reference/randomizeCRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomize a two-armed cluster randomized trial — randomizeCRT","text":"","code":"randomizeCRT(   trial,   matchedPair = FALSE,   baselineNumerator = \"base_num\",   baselineDenominator = \"base_denom\" )"},{"path":"/reference/randomizeCRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomize a two-armed cluster randomized trial — randomizeCRT","text":"trial object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm). Optionally: specification buffer zone (logical buffer); variables required subsequent analysis. matchedPair logical: indicator whether pair-matching baseline data used randomization baselineNumerator name numerator variable baseline data (required matched-pair randomization) baselineDenominator name denominator variable baseline data (required matched-pair randomization)","code":""},{"path":"/reference/randomizeCRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomize a two-armed cluster randomized trial — randomizeCRT","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/randomizeCRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomize a two-armed cluster randomized trial — randomizeCRT","text":"","code":"# Randomize the clusters in an example trial exampleCRT <- randomizeCRT(trial = readdata('exampleCRT.txt'), matchedPair = TRUE) #> ** Warning: no baseline data for matching. Unmatched randomisation **"},{"path":"/reference/readdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read example dataset — readdata","title":"Read example dataset — readdata","text":"readdata reads file package library example datasets","code":""},{"path":"/reference/readdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read example dataset — readdata","text":"","code":"readdata(filename)"},{"path":"/reference/readdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read example dataset — readdata","text":"filename name text file stored within package","code":""},{"path":"/reference/readdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read example dataset — readdata","text":"R object corresponding text file","code":""},{"path":"/reference/readdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read example dataset — readdata","text":"input file name include extension (either .csv .txt). resulting object data frame extension .csv.","code":""},{"path":"/reference/residuals.CRTanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model residuals — residuals.CRTanalysis","title":"Extract model residuals — residuals.CRTanalysis","text":"residuals.CRTanalysis method extracting model residuals","code":""},{"path":"/reference/residuals.CRTanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model residuals — residuals.CRTanalysis","text":"","code":"# S3 method for CRTanalysis residuals(object, ...)"},{"path":"/reference/residuals.CRTanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model residuals — residuals.CRTanalysis","text":"object CRTanalysis object ... arguments","code":""},{"path":"/reference/simulateCRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of cluster randomized trial with contamination — simulateCRT","title":"Simulation of cluster randomized trial with contamination — simulateCRT","text":"simulateCRT generates simulated data cluster randomized trial (CRT) geographic contamination arms.","code":""},{"path":"/reference/simulateCRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of cluster randomized trial with contamination — simulateCRT","text":"","code":"simulateCRT(   trial = NULL,   effect = 0,   outcome0 = NULL,   generateBaseline = TRUE,   matchedPair = TRUE,   scale = \"proportion\",   baselineNumerator = \"base_num\",   baselineDenominator = \"base_denom\",   denominator = NULL,   ICC_inp = NULL,   kernels = 200,   sd = NULL,   theta_inp = NULL,   tol = 0.005 )"},{"path":"/reference/simulateCRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of cluster randomized trial with contamination — simulateCRT","text":"trial object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm). location may also assigned propensity (see details). effect numeric. simulated effect size (defaults 0) outcome0 numeric. anticipated value outcome absence intervention generateBaseline logical. TRUE baseline data propensity simulated matchedPair logical. TRUE function tries carry randomization using pair-matching baseline data (see details) scale measurement scale outcome. Options : 'proportion' (default); 'count'; 'continuous'. baselineNumerator optional name numerator variable pre-existing baseline data baselineDenominator optional name denominator variable pre-existing baseline data denominator optional name denominator variable outcome ICC_inp numeric. Target intra cluster correlation, provided input baseline data simulated kernels number kernels used generate de novo propensity sd numeric. standard deviation normal kernel measuring spatial smoothing leading contamination theta_inp numeric. input contamination range tol numeric. tolerance output ICC","code":""},{"path":"/reference/simulateCRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of cluster randomized trial with contamination — simulateCRT","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/simulateCRT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation of cluster randomized trial with contamination — simulateCRT","text":"Synthetic data generated sampling around values variable propensity, numerical vector (taking positive values) length equal number locations. three ways propensity can arise: propensity can provided part input trial object. Baseline numerators denominators (values baselineNumerator baselineDenominator may provided. propensity generated numerator:denominator ratio location input object Otherwise propensity generated using 2D Normal kernel density. OOR::StoSOO used achieve intra-cluster correlation coefficient (ICC) approximates value 'ICC_inp' searching appropriate value kernel bandwidth. num[], synthetic outcome location simulated expectation:  $$\\code{E(num[]) = outcome0[] * propensity[] * denom[] * (1 - effect*[])/mean(outcome0[] * propensity[])}$$  sampling distribution num[] depends value scale follows: denominator may specify vector numeric (non-zero) values input \"CRTsp\" data.frame returned variable denom. acts scale-factor continuous outcomes, rate-multiplier counts, denominator proportions. discrete data values denom must > 0.5 rounded nearest integer calculations num. default, denom generated vector ones, leading simulation dichotomous outcomes scale=’proportion’. baseline numerators denominators provided output vectors base_denom  base_num set input values. baseline numerators denominators provided synthetic baseline data generated sampling around propensity way outcome data, effect size set zero. matchedPair TRUE pair-matching baseline data used randomization providing even number clusters. odd number clusters matched pairs generated unmatched randomization output. Either sd theta_inp must provided. provided value sd overwritten standard deviation implicit value theta_inp. Contamination simulated arising diffusion-like process. details see Multerer (2021)","code":""},{"path":"/reference/simulateCRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation of cluster randomized trial with contamination — simulateCRT","text":"","code":"{exampleCRT <- readdata('exampleCRT.txt')  simulation <- simulateCRT(exampleCRT,   effect = 0.25,   ICC_inp = 0.05,   outcome0 = 0.5,   matchedPair = FALSE,   scale = 'proportion',   sd = 0.6,   tol = 0.05)  summary(simulation) } #>  #> =====================    SIMULATION OF CLUSTER RANDOMISED TRIAL    ================= #> Estimating the smoothing required to achieve the target ICC of 0.05  #>                                                            #> ===============================CLUSTER RANDOMISED TRIAL =========================== #>  #> Summary of coordinates #> ---------------------- #>         Min.   : 1st Qu.: Median : Mean   : 3rd Qu.: Max.   : #>       x -3.20    -1.40    -0.30    -0.07     1.26     5.16    #>       y -5.08    -2.84     0.19     0.05     2.49     6.16    #> Total area (within  0.2 km of a location) :  27.6 sq.km #>  #> Geolocation of centroid (radians): #>           latitude:  -0.43 longitude:  34.2  #>  #> Locations and Clusters #> ----------------------                                          -             #> Coordinate system                      (x, y)             #> Locations:                                                      1181             #> Available clusters (across both arms)                           24             #>   Per cluster mean number of points                             49.2             #>   Per cluster s.d. number of points                             3.9             #> S.D. of distance to nearest discordant location (km):           1.05           #> Cluster randomization:                      Independently randomized             #> No power calculations to report          -             #>  #> Other variables in dataset #> --------------------------          RDT_test_result  base_denom  denom  propensity  num  base_num"},{"path":"/reference/specify_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Specification of buffer zone in a cluster randomized trial — specify_buffer","title":"Specification of buffer zone in a cluster randomized trial — specify_buffer","text":"specify_buffer specifies buffer zone cluster randomized trial (CRT) flagging locations within defined distance opposite arm.","code":""},{"path":"/reference/specify_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specification of buffer zone in a cluster randomized trial — specify_buffer","text":"","code":"specify_buffer(trial, buffer_width = 0)"},{"path":"/reference/specify_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specification of buffer zone in a cluster randomized trial — specify_buffer","text":"trial object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm). buffer_width minimum distance locations opposing arms qualify included core area (km)","code":""},{"path":"/reference/specify_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specification of buffer zone in a cluster randomized trial — specify_buffer","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/specify_buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specification of buffer zone in a cluster randomized trial — specify_buffer","text":"","code":"#Specify a buffer of 200m exampletrial <- specify_buffer(trial = readdata('exampleCRT.txt'), buffer_width = 0.2)"},{"path":"/reference/specify_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithmically assign locations to clusters in a CRT — specify_clusters","title":"Algorithmically assign locations to clusters in a CRT — specify_clusters","text":"specify_clusters algorithmically assigns locations clusters grouping geographically","code":""},{"path":"/reference/specify_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithmically assign locations to clusters in a CRT — specify_clusters","text":"","code":"specify_clusters(   trial = trial,   k = NULL,   h = NULL,   algorithm = \"NN\",   reuseTSP = FALSE )"},{"path":"/reference/specify_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algorithmically assign locations to clusters in a CRT — specify_clusters","text":"trial CRT object data frame containing (x,y) coordinates households k integer: number clusters arm h integer: number locations per cluster algorithm algorithm cluster boundaries, options : NN (default),  kmeans,  TSP reuseTSP logical: indicator whether pre-existing path used TSP algorithm","code":""},{"path":"/reference/specify_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Algorithmically assign locations to clusters in a CRT — specify_clusters","text":"list class \"CRTsp\" containing following components:","code":""},{"path":"/reference/specify_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Algorithmically assign locations to clusters in a CRT — specify_clusters","text":"Clustering carried using one three algorithms: Either k h must specified. specified input value k ignored.","code":""},{"path":"/reference/specify_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Algorithmically assign locations to clusters in a CRT — specify_clusters","text":"","code":"#Assign clusters of average size h = 40 to a test set of co-ordinates, using the kmeans algorithm exampletrial <- specify_clusters(trial = readdata('exampleCRT.txt'),                             h = 40, algorithm = 'kmeans', reuseTSP = FALSE)"},{"path":"/reference/summary.CRTanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of the results of a statistical analysis of a CRT — summary.CRTanalysis","title":"Summary of the results of a statistical analysis of a CRT — summary.CRTanalysis","text":"summary.CRTanalysis generates summary CRTanalysis including main results","code":""},{"path":"/reference/summary.CRTanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of the results of a statistical analysis of a CRT — summary.CRTanalysis","text":"","code":"# S3 method for CRTanalysis summary(object, ...)"},{"path":"/reference/summary.CRTanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of the results of a statistical analysis of a CRT — summary.CRTanalysis","text":"object object class \"CRTanalysis\" ... arguments used summary","code":""},{"path":"/reference/summary.CRTsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary description of a ","title":"Summary description of a ","text":"summary.CRTsp provides description \"CRTsp\" object","code":""},{"path":"/reference/summary.CRTsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary description of a ","text":"","code":"# S3 method for CRTsp summary(object, maskbuffer = 0.2, ...)"},{"path":"/reference/summary.CRTsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary description of a ","text":"object object class \"CRTsp\" data frame containing locations (x,y) coordinates, cluster assignments (factor cluster), arm assignments (factor arm) buffer zones (logical buffer), together variables required subsequent analysis. maskbuffer radius area around location include calculation areas ... arguments used summary","code":""}]
